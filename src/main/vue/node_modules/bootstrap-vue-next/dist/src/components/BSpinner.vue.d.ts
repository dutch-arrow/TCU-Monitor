import type { Booleanish, SpinnerType } from '../types';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    small: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    type: {
        type: import("vue").PropType<SpinnerType>;
        default: string;
    };
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    label: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    role: {
        type: import("vue").PropType<string>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../types").BaseColorVariant | null>;
        default: null;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    small: {
        type: import("vue").PropType<Booleanish>;
        default: boolean;
    };
    type: {
        type: import("vue").PropType<SpinnerType>;
        default: string;
    };
    tag: {
        type: import("vue").PropType<string>;
        default: string;
    };
    label: {
        type: import("vue").PropType<string>;
        default: undefined;
    };
    role: {
        type: import("vue").PropType<string>;
        default: string;
    };
    variant: {
        type: import("vue").PropType<keyof import("../types").BaseColorVariant | null>;
        default: null;
    };
}>>, {
    small: Booleanish;
    type: SpinnerType;
    tag: string;
    label: string;
    role: string;
    variant: keyof import("../types").BaseColorVariant | null;
}, {}>, {
    label?: ((props: Record<string, never>) => any) | undefined;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
