{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport 'chartjs-adapter-moment';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { Line } from 'vue-chartjs';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nexport default {\n  components: {\n    Line\n  },\n  name: 'SetupPage',\n  props: [],\n  data() {\n    return {\n      loading: false,\n      errmsg: '',\n      retrieveResult: '',\n      tcu: {\n        name: '',\n        ipaddress: ''\n      },\n      devices: [],\n      timers: [],\n      starttime: 1577833200000,\n      graphHeight: 1.0,\n      graphSpace: 0.3,\n      devColors: ['#332655', '#490099', '#5d00d9', '#6d00ff', '#8557ff', '#ffa79c', '#055636', '#699986', '#9bc173', '#ee9a00', '#f86051', '#00cc1a'],\n      tempData: {\n        labels: [],\n        datasets: []\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                let label = context.dataset.label || '';\n                if (label) {\n                  label += ': ';\n                }\n                if (context.parsed.y !== null) {\n                  label += context.parsed.y / (1.0 + 0.3) - context.datasetIndex > 0.0 ? 'on' : 'off';\n                }\n                return label;\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            ticks: {\n              callback: function () {\n                return '';\n              }\n            },\n            grid: {\n              display: false\n            }\n          },\n          x: {\n            type: 'time',\n            time: {\n              unit: 'hour',\n              displayFormats: {\n                hour: 'HH:mm'\n              },\n              tooltipFormat: 'HH:mm',\n              ticks: {\n                source: 'auto'\n              }\n            },\n            min: this.starttime,\n            max: this.starttime + 1440000000\n          }\n        },\n        elements: {\n          point: {\n            pointStyle: false\n          },\n          line: {\n            borderWidth: 1\n          }\n        }\n      }\n    };\n  },\n  computed: {\n    chartHeight() {\n      return {\n        height: `${500}px`,\n        position: 'relative'\n      };\n    }\n  },\n  methods: {\n    getProperties() {\n      this.loading = true;\n      this.axios.post(\"/api/command\", {\n        command: \"getProperties\",\n        data: {\n          ipaddress: this.tcu.ipaddress\n        }\n      }).then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.devices = [];\n          for (var dev of f.devices) {\n            this.devices.push(dev.device);\n          }\n        }\n        this.loading = false;\n        this.getTimers();\n      }).catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    },\n    getTimers() {\n      this.loading = true;\n      this.loaded = false;\n      this.axios.post(\"/api/command\", {\n        command: \"getTimers\",\n        data: {\n          ipaddress: this.tcu.ipaddress\n        }\n      }).then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"\";\n          this.timers = f.timers;\n          this.loaded = false;\n          this.tempData = {\n            labels: [],\n            datasets: []\n          };\n          for (var i = 0; i < this.devices.length; i++) {\n            this.tempData.datasets.push({\n              label: this.devices[i],\n              borderColor: this.devColors[i],\n              data: Array(1441)\n            });\n          }\n          /*\n            \"device\": \"sprayer\",\n            \"hour_off\": 0,\n            \"hour_on\": 10,\n            \"index\": 1,\n            \"minute_off\": 0,\n            \"minute_on\": 5,\n            \"period\": 30,\n            \"repeat\": 1\n          */\n          for (var t of this.timers) {\n            var ix = this.getDeviceIndex(t.device);\n            var time = this.starttime + (t.hour_on * 60 + t.minute_on) * 60000;\n            var timestr = this.getTimeString(t.hour_on, t.minute_on);\n            var dix = this.getTimeIndex(this.starttime, \"2020-01-01T\" + timestr);\n            var value = ix * (this.graphHeight + this.graphSpace) + this.graphHeight;\n            this.tempData.datasets[ix].data[dix] = {\n              x: time,\n              y: value\n            };\n            if (t.period === 0) {\n              time = this.starttime + (t.hour_off * 60 + t.minute_off) * 60000;\n              timestr = this.getTimeString(t.hour_off, t.minute_off);\n            } else {\n              time += Math.ceil(t.period / 60) * 1000;\n              timestr = this.getTimeString(t.hour_on, t.minute_on + Math.ceil(t.period / 60));\n            }\n            dix = this.getTimeIndex(this.starttime, \"2020-01-01T\" + timestr);\n            value = ix * (this.graphHeight + this.graphSpace);\n            this.tempData.datasets[ix].data[dix] = {\n              x: time,\n              y: value\n            };\n          }\n          // Fill in the blanks\n          for (var d = 0; d < this.devices.length; d++) {\n            var lasty = 0;\n            if (this.tempData.datasets[d].data[0] !== undefined) {\n              lasty = this.tempData.datasets[d].data[0].y;\n            }\n            for (i = 1; i < 1441; i++) {\n              if (this.tempData.datasets[d].data[i] === undefined) {\n                this.tempData.datasets[d].data[i] = {\n                  x: this.starttime + i * 60000,\n                  y: lasty\n                };\n              } else {\n                lasty = this.tempData.datasets[d].data[i].y;\n              }\n            }\n          }\n          console.log(this.tempData);\n          this.loaded = true;\n        }\n        this.loading = false;\n      }).catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    },\n    getTimeString(hour, minute) {\n      var hr = hour < 10 ? \"0\" + hour.toString() : hour.toString();\n      return hr + \":\" + (minute < 10 ? \"0\" + minute.toString() : minute.toString()) + \":00\";\n    },\n    getDeviceIndex(dev) {\n      var ix = -1;\n      for (var i = 0; i < this.devices.length; i++) {\n        if (dev === this.devices[i]) {\n          ix = i;\n          break;\n        }\n      }\n      return ix;\n    },\n    /*\n    params:\n      time: datetime-string e.g. \"2023-07-05T16:14:02\"\n    return:\n      datetime in milliseconds since 1/1/70, rounded to minutes\n    */\n    getMinutes(time) {\n      // \n      var t = Date.parse(time);\n      return Math.floor(t / 60000) * 60000;\n    },\n    /*\n    params:\n      timeStart: datetime in milliseconds since 1/1/70, rounded to minutes\n      thisTime:  datetime-string e.g. \"2020-01-01T16:14:02\"\n    return:\n      minutes gone by since timeStart\n    */\n    getTimeIndex(timeStart, thisTime) {\n      var tn = this.getMinutes(thisTime);\n      return (tn - timeStart) / 60000;\n    }\n  },\n  watch: {},\n  mounted() {\n    this.emitter.on('newtcu', tcu => {\n      console.log(\"TcuSetup page received 'newtcu' message: \", tcu);\n      this.tcu = tcu;\n      this.getProperties();\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Line","register","components","name","props","data","loading","errmsg","retrieveResult","tcu","ipaddress","devices","timers","starttime","graphHeight","graphSpace","devColors","tempData","labels","datasets","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","callbacks","label","context","dataset","parsed","y","datasetIndex","scales","type","ticks","callback","grid","x","time","unit","displayFormats","hour","tooltipFormat","source","min","max","elements","point","pointStyle","line","borderWidth","computed","chartHeight","height","position","methods","getProperties","axios","post","command","then","response","f","error","undefined","dev","push","device","getTimers","catch","message","loaded","i","length","borderColor","Array","t","ix","getDeviceIndex","hour_on","minute_on","timestr","getTimeString","dix","getTimeIndex","value","period","hour_off","minute_off","Math","ceil","d","lasty","console","log","minute","hr","toString","getMinutes","Date","parse","floor","timeStart","thisTime","tn","watch","mounted","emitter","on"],"sourceRoot":"","sources":["/homes/tom/Workspaces/java/tcu-monitor/src/main/vue/src/components/TcuSetup.vue"],"sourcesContent":["<template>\n  <BAlert :model-value=\"retrieveResult !== ''\" :variant=\"errmsg\" show>{{ retrieveResult }}</BAlert>\n  <BOverlay :show=\"loading\" variant=\"light\" opacity=\"0.6\" rounded=\"sm\"></BOverlay>\n  <BContainer fluid v-show=\"showGraph\">\n    <BRow>\n      <BCol class=\"col-xxl-11\">\n        <Line v-if=\"loaded\" :options=\"chartOptions\" :data=\"tempData\" :style=\"chartHeight\"></Line>\n      </BCol>\n    </BRow>\n  </BContainer>\n</template>\n\n<style>\n.text-size {\n  font-size: 18px;\n}\n</style>\n<script>\nimport 'chartjs-adapter-moment'\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n} from 'chart.js'\n\nimport { Line } from 'vue-chartjs'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n)\n\nexport default {\n  components: {\n    Line,\n  },\n  name: 'SetupPage',\n  props: [],\n  data() {\n    return {\n      loading: false,\n      errmsg: '',\n      retrieveResult: '',\n      tcu:{name:'',ipaddress:''},\n      devices: [],\n      timers: [],\n      starttime:1577833200000,\n      graphHeight: 1.0,\n      graphSpace: 0.3,\n      devColors: ['#332655','#490099','#5d00d9','#6d00ff','#8557ff','#ffa79c','#055636','#699986','#9bc173','#ee9a00','#f86051','#00cc1a'],\n      tempData : {labels:[],datasets:[]},\n      chartOptions: {responsive:true, maintainAspectRatio:false,\n        plugins: {\n          legend:{display:true},\n          tooltip: {\n            callbacks: {\n              label: function(context) {\n                let label = context.dataset.label || '';\n                if (label) {\n                    label += ': ';\n                }\n                if (context.parsed.y !== null) {\n                  label += (((context.parsed.y) / (1.0 + 0.3)) - context.datasetIndex) > 0.0 ? 'on' : 'off' ;\n                }\n                return label;\n              }\n            }\n          },\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            ticks: {\n              callback:\n                function () {\n                  return '';\n                },\n              },\n            grid: {display: false,},\n          },\n          x: {\n            type: 'time',\n            time: {\n              unit: 'hour',\n              displayFormats: {\n                  hour: 'HH:mm'\n              },\n              tooltipFormat: 'HH:mm',\n              ticks: {\n                source: 'auto',\n              },\n            },\n            min: this.starttime,\n            max: this.starttime + 1440000000,\n          },\n        },\n        elements: {\n          point: {\n            pointStyle: false,\n          },\n          line: {\n            borderWidth: 1,\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    chartHeight () {return {height:`${500}px`,position: 'relative'}}\n  },\n  methods: {\n    getProperties() {\n      this.loading = true;\n      this.axios.post(\"/api/command\", {\n        command: \"getProperties\",\n        data: {ipaddress:this.tcu.ipaddress}\n      })\n      .then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.devices = [];\n          for (var dev of f.devices) {\n            this.devices.push(dev.device);\n          }\n        }\n        this.loading = false;\n        this.getTimers();\n      })\n      .catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    },\n    getTimers() {\n      this.loading = true;\n      this.loaded = false;\n      this.axios.post(\"/api/command\", {\n        command: \"getTimers\",\n        data: {ipaddress:this.tcu.ipaddress}\n      })\n      .then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"\";\n          this.timers = f.timers;\n          this.loaded = false;\n          this.tempData = {labels:[],datasets:[]};\n          for (var i=0; i<this.devices.length; i++) {\n            this.tempData.datasets.push({label: this.devices[i], borderColor: this.devColors[i], data: Array(1441)});\n             \n          }\n          /*\n            \"device\": \"sprayer\",\n            \"hour_off\": 0,\n            \"hour_on\": 10,\n            \"index\": 1,\n            \"minute_off\": 0,\n            \"minute_on\": 5,\n            \"period\": 30,\n            \"repeat\": 1\n          */\n          for (var t of this.timers) {\n            var ix = this.getDeviceIndex(t.device);\n            var time = this.starttime + (t.hour_on * 60 + t.minute_on) * 60000;\n            var timestr = this.getTimeString(t.hour_on, t.minute_on);\n            var dix = this.getTimeIndex(this.starttime, \"2020-01-01T\" + timestr);\n            var value = (ix * (this.graphHeight + this.graphSpace)) + this.graphHeight;\n            this.tempData.datasets[ix].data[dix] = {x:time, y:value};\n            if (t.period === 0) {\n              time = this.starttime + (t.hour_off * 60 + t.minute_off) * 60000;\n              timestr = this.getTimeString(t.hour_off, t.minute_off);\n            } else {\n              time += Math.ceil(t.period / 60) * 1000;\n              timestr = this.getTimeString(t.hour_on, t.minute_on + Math.ceil(t.period / 60));\n            }\n            dix = this.getTimeIndex(this.starttime, \"2020-01-01T\" + timestr);\n            value = (ix * (this.graphHeight + this.graphSpace));\n            this.tempData.datasets[ix].data[dix] = {x:time, y:value};\n          }\n          // Fill in the blanks\n          for (var d=0; d<this.devices.length; d++) {\n            var lasty = 0;\n            if (this.tempData.datasets[d].data[0] !== undefined) {\n              lasty = this.tempData.datasets[d].data[0].y;\n            }\n            for (i=1; i<1441; i++) {\n              if (this.tempData.datasets[d].data[i] === undefined) {\n                this.tempData.datasets[d].data[i] = {x: this.starttime + (i * 60000), y: lasty};\n              } else {\n                lasty = this.tempData.datasets[d].data[i].y;\n              }\n            }\n          }\n          console.log(this.tempData);\n          this.loaded = true;\n        }\n        this.loading = false;\n      })\n      .catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    },\n    getTimeString(hour, minute) {\n      var hr = (hour<10 ? \"0\" + hour.toString() : hour.toString());\n      return hr + \":\" + (minute<10 ? \"0\" + minute.toString() : minute.toString()) + \":00\";\n    },\n    getDeviceIndex(dev) {\n      var ix = -1;\n      for (var i=0; i<this.devices.length; i++) {\n        if(dev === this.devices[i]) {\n          ix = i;\n          break;\n        }\n      }\n      return ix;\n    },\n    /*\n    params:\n      time: datetime-string e.g. \"2023-07-05T16:14:02\"\n    return:\n      datetime in milliseconds since 1/1/70, rounded to minutes\n    */\n    getMinutes(time) { // \n      var t = Date.parse(time);\n      return Math.floor(t / 60000) * 60000;\n    },\n    /*\n    params:\n      timeStart: datetime in milliseconds since 1/1/70, rounded to minutes\n      thisTime:  datetime-string e.g. \"2020-01-01T16:14:02\"\n    return:\n      minutes gone by since timeStart\n    */\n    getTimeIndex(timeStart, thisTime) {\n      var tn = this.getMinutes(thisTime);\n      return (tn - timeStart) / 60000;\n    }\n  },\n  watch: {\n  },\n  mounted() {\n    this.emitter.on('newtcu', tcu => {\n        console.log(\"TcuSetup page received 'newtcu' message: \", tcu);\n        this.tcu = tcu;\n        this.getProperties();\n      }\n    );\n  }\n}\n\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}