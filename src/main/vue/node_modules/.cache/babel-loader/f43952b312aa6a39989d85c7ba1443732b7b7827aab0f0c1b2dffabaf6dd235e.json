{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  components: {},\n  name: 'ConfigPage',\n  props: ['showPage'],\n  data() {\n    return {\n      loading: false,\n      errmsg: '',\n      retrieveResult: '',\n      nrOfTCUs: 0,\n      tcu: [{\n        name: '',\n        ipaddress: '192.168.xxx.xxx'\n      }, {\n        name: '',\n        ipaddress: '192.168.xxx.xxx'\n      }, {\n        name: '',\n        ipaddress: '192.168.xxx.xxx'\n      }, {\n        name: '',\n        ipaddress: '192.168.xxx.xxx'\n      }, {\n        name: '',\n        ipaddress: '192.168.xxx.xxx'\n      }],\n      config: {\n        host: '',\n        port: 0,\n        tcu: []\n      }\n    };\n  },\n  computed: {},\n  methods: {\n    validateIP(ix) {\n      var ip = String(this.tcu[ix].ipaddress);\n      var ipsegs = ip.split(\".\");\n      if (ipsegs != 4) {\n        return false;\n      }\n      for (var seg of ipsegs) {\n        if (String(seg).match(\"^[0-9]{1,3}$\") == null) return false;\n      }\n      return true;\n    },\n    onSubmit() {\n      this.config.tcu = [];\n      for (var i = 0; i < this.this.nrOfTCUs; i++) {\n        this.config.tcu.push({\n          name: this.tcu[i].name,\n          ipaddress: this.tcu[i].ipaddress\n        });\n      }\n      this.emitter.emit(\"config\", this.config);\n      this.axios.post(\"/api/command\", {\n        command: \"saveConfig\",\n        data: this.config\n      }).then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"Configuration saved.\";\n        }\n        this.loading = false;\n      }).catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    },\n    getConfig() {\n      this.axios.post(\"/api/command\", {\n        command: \"getConfig\",\n        data: {}\n      }).then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"\";\n          this.config = f;\n          this.tcu = f.tcu;\n          this.nrOfTCUs = this.tcu.length;\n          for (var i = this.nrOfTCUs - 1; i < 5; i++) {\n            this.tcu.push({\n              name: '',\n              ipaddress: ''\n            });\n          }\n        }\n        this.loading = false;\n      }).catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    }\n  },\n  watch: {},\n  mounted() {\n    this.getConfig();\n  }\n};","map":{"version":3,"mappings":"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","names":["components","name","props","data","loading","errmsg","retrieveResult","nrOfTCUs","tcu","ipaddress","config","host","port","computed","methods","validateIP","ix","ip","String","ipsegs","split","seg","match","onSubmit","i","this","push","emitter","emit","axios","post","command","then","response","f","error","undefined","catch","message","getConfig","length","watch","mounted"],"sourceRoot":"","sources":["/homes/tom/Workspaces/java/tcu-monitor/src/main/vue/src/components/Configuration.vue"],"sourcesContent":["<template>\n  <BCard title=\"Configuration\" v-show=\"showPage\">\n    <BAlert :model-value=\"retrieveResult !== ''\" :variant=\"errmsg\" show>{{ retrieveResult }}</BAlert>\n    <BOverlay :show=\"loading\" variant=\"light\" opacity=\"0.6\" rounded=\"sm\"></BOverlay>\n    <BForm>\n      <BFormGroup class=\"input-group\" label=\"Number of TCUs to configure\" label-for=\"input-1\">\n        <BFormInput id=\"nroftcus\" v-model=\"nrOfTCUs\" type=\"range\" min=\"1\" max=\"5\" required/>\n      </BFormGroup>\n    </BForm>\n    <BForm @submit=\"onSubmit\">\n      <BFormGroup v-show=\"nrOfTCUs >= 1\">\n        <BFormGroup class=\"input-group\" label=\"Name of TCU:\" label-for=\"input-11\">\n          <BFormInput id=\"input-11\" v-model=\"tcu[0].name\" required/>\n        </BFormGroup>\n        <BFormGroup class=\"input-group\" label=\"IP address of TCU:\" label-for=\"input-12\">\n          <BFormInput id=\"input-12\" v-model=\"tcu[0].ipaddress\" :state=\"validateIP(0)\" placeholder=\"192.168.xxx.xxx\" required/>\n          <BFormInvalidFeedback id=\"input-live-feedback\">\n            IP address consist of 4 segments of max 3 digits separated by a .\n          </BFormInvalidFeedback>\n        </BFormGroup>\n      </BFormGroup>\n      <BFormGroup v-show=\"nrOfTCUs >= 2\">\n        <BFormGroup class=\"input-group\" label=\"Name of TCU:\" label-for=\"input-21\">\n          <BFormInput id=\"input-21\" v-model=\"tcu[1].name\" required/>\n        </BFormGroup>\n        <BFormGroup class=\"input-group\" label=\"IP address of TCU:\" label-for=\"input-22\">\n          <BFormInput id=\"input-22\" v-model=\"tcu[1].ipaddress\" :state=\"validateIP(1)\" placeholder=\"192.168.xxx.xxx\" required/>\n          <BFormInvalidFeedback id=\"input-live-feedback\">\n            IP address consist of 4 segments of max 3 digits separated by a .\n          </BFormInvalidFeedback>\n        </BFormGroup>\n      </BFormGroup>\n      <BFormGroup v-show=\"nrOfTCUs >= 3\">\n        <BFormGroup class=\"input-group\" label=\"Name of TCU:\" label-for=\"input-31\">\n          <BFormInput id=\"input-31\" v-model=\"tcu[2].name\" required/>\n        </BFormGroup>\n        <BFormGroup class=\"input-group\" label=\"IP address of TCU:\" label-for=\"input-32\">\n          <BFormInput id=\"input-32\" v-model=\"tcu[2].ipaddress\" :state=\"validateIP(2)\" placeholder=\"192.168.xxx.xxx\" required/>\n          <BFormInvalidFeedback id=\"input-live-feedback\">\n            IP address consist of 4 segments of max 3 digits separated by a .\n          </BFormInvalidFeedback>\n        </BFormGroup>\n      </BFormGroup>\n      <BFormGroup v-show=\"nrOfTCUs >= 4\">\n        <BFormGroup class=\"input-group\" label=\"Name of TCU:\" label-for=\"input-41\">\n          <BFormInput id=\"input-41\" v-model=\"tcu[3].name\" required/>\n        </BFormGroup>\n        <BFormGroup class=\"input-group\" label=\"IP address of TCU:\" label-for=\"input-42\">\n          <BFormInput id=\"input-42\" v-model=\"tcu[3].ipaddress\" :state=\"validateIP(3)\" placeholder=\"192.168.xxx.xxx\" required/>\n          <BFormInvalidFeedback id=\"input-live-feedback\">\n            IP address consist of 4 segments of max 3 digits separated by a .\n          </BFormInvalidFeedback>\n        </BFormGroup>\n      </BFormGroup>\n      <BFormGroup v-show=\"nrOfTCUs >= 5\">\n        <BFormGroup class=\"input-group\" label=\"Name of TCU:\" label-for=\"input-51\">\n          <BFormInput id=\"input-51\" v-model=\"tcu[4].name\" required/>\n        </BFormGroup>\n        <BFormGroup class=\"input-group\" label=\"IP address of TCU:\" label-for=\"input-52\">\n          <BFormInput id=\"input-52\" v-model=\"tcu[4].ipaddress\" :state=\"validateIP(4)\" placeholder=\"192.168.xxx.xxx\" required/>\n          <BFormInvalidFeedback id=\"input-live-feedback\">\n            IP address consist of 4 segments of max 3 digits separated by a .\n          </BFormInvalidFeedback>\n        </BFormGroup>\n      </BFormGroup>\n      <BButton type=\"submit\" variant=\"primary\">Save</BButton>\n    </BForm>\n  </BCard>\n</template>\n\n<style>\n.text-size {\n  font-size: 14px;\n }\n .input-group-1 {\n  display:inline-block;\n }\n</style>\n<script>\n\nexport default {\n  components: {\n    \n  },\n  name: 'ConfigPage',\n  props: ['showPage'],\n  data() {\n    return {\n      loading: false,\n      errmsg: '',\n      retrieveResult: '',\n      nrOfTCUs: 0,\n      tcu:[\n        {name:'',ipaddress:'192.168.xxx.xxx'},\n        {name:'',ipaddress:'192.168.xxx.xxx'},\n        {name:'',ipaddress:'192.168.xxx.xxx'},\n        {name:'',ipaddress:'192.168.xxx.xxx'},\n        {name:'',ipaddress:'192.168.xxx.xxx'},\n      ],\n      config:{host:'',port:0, tcu:[]}\n    }\n  },\n  computed: {\n  },\n  methods: {\n    validateIP(ix) {\n      var ip = String(this.tcu[ix].ipaddress);\n      var ipsegs = ip.split(\".\");\n      if (ipsegs != 4) {\n        return false;\n      }\n      for (var seg of ipsegs) {\n        if (String(seg).match(\"^[0-9]{1,3}$\") == null ) return false;\n      }\n      return true;\n    },\n    onSubmit() {\n      this.config.tcu=[];\n      for (var i=0; i<this.this.nrOfTCUs; i++) {\n        this.config.tcu.push({name:this.tcu[i].name, ipaddress:this.tcu[i].ipaddress});\n      }\n      this.emitter.emit(\"config\", this.config);\n      this.axios.post(\"/api/command\", {\n        command: \"saveConfig\",\n        data: this.config\n      })\n      .then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"Configuration saved.\";\n        }\n        this.loading = false;\n      })\n      .catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    },\n    getConfig() {\n      this.axios.post(\"/api/command\", {\n        command: \"getConfig\",\n        data: {}\n      })\n      .then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"\";\n          this.config = f;\n          this.tcu = f.tcu;\n          this.nrOfTCUs = this.tcu.length;\n          for (var i=this.nrOfTCUs - 1; i<5; i++) {\n            this.tcu.push({name:'',ipaddress:''});\n          }\n        }\n        this.loading = false;\n      })\n      .catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    }\n  },\n  watch: {\n  },\n  mounted() {\n    this.getConfig();\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}