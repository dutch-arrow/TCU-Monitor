{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BAlert = _resolveComponent(\"BAlert\");\n  const _component_BOverlay = _resolveComponent(\"BOverlay\");\n  const _component_BCol = _resolveComponent(\"BCol\");\n  const _component_BRow = _resolveComponent(\"BRow\");\n  const _component_BContainer = _resolveComponent(\"BContainer\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_BAlert, {\n    \"model-value\": $data.retrieveResult !== '',\n    variant: $data.errmsg,\n    show: \"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($data.retrieveResult), 1)]),\n    _: 1\n  }, 8, [\"model-value\", \"variant\"]), _createVNode(_component_BOverlay, {\n    show: $data.loading,\n    variant: \"light\",\n    opacity: \"0.6\",\n    rounded: \"sm\"\n  }, null, 8, [\"show\"]), _createVNode(_component_BContainer, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.timers, timer => {\n      return _openBlock(), _createBlock(_component_BRow, {\n        key: timer.device\n      }, {\n        default: _withCtx(() => [_createVNode(_component_BCol, null, {\n          default: _withCtx(() => [_createTextVNode(\" Device \" + _toDisplayString(timer.device), 1)]),\n          _: 2\n        }, 1024)]),\n        _: 2\n      }, 1024);\n    }), 128))])]),\n    _: 1\n  })], 64);\n}","map":{"version":3,"mappings":";;;;;;;6DACEA,aAAiGC;IAAxF,aAAW,EAAEC,oBAAc;IAAUC,OAAO,EAAED,YAAM;IAAEE,IAAI,EAAJ;;sBAAK,MAAoB,mCAAjBF,oBAAc;;qCACrFF,aAAgFK;IAArED,IAAI,EAAEF,aAAO;IAAEC,OAAO,EAAC,OAAO;IAACG,OAAO,EAAC,KAAK;IAACC,OAAO,EAAC;yBAChEP,aAQaQ;sBAPX,MAMM,CANNC,oBAMM,iCALJC,oBAIOC,6BAJeT,YAAM,EAAfU,KAAK;2BAAlBC,aAIOC;QAJ8BC,GAAG,EAAEH,KAAK,CAACI;;0BAC9C,MAEO,CAFPhB,aAEOiB;4BAFD,MACG,kBADH,UACG,oBAAGL,KAAK,CAACI,MAAM","names":["_createVNode","_component_BAlert","$data","variant","show","_component_BOverlay","opacity","rounded","_component_BContainer","_createElementVNode","_createElementBlock","_Fragment","timer","_createBlock","_component_BRow","key","device","_component_BCol"],"sourceRoot":"","sources":["/homes/tom/Workspaces/java/tcu-monitor/src/main/vue/src/components/TcuSetup.vue"],"sourcesContent":["<template>\n  <BAlert :model-value=\"retrieveResult !== ''\" :variant=\"errmsg\" show>{{ retrieveResult }}</BAlert>\n  <BOverlay :show=\"loading\" variant=\"light\" opacity=\"0.6\" rounded=\"sm\"></BOverlay>\n  <BContainer>\n    <div>\n      <BRow v-for=\"timer in timers\" v-bind:key=\"timer.device\">\n        <BCol>\n          Device {{ timer.device }}\n        </BCol>\n      </BRow>\n    </div>\n  </BContainer>\n</template>\n\n<style>\n.text-size {\n  font-size: 18px;\n}\n</style>\n<script>\n\nexport default {\n  components: {\n    \n  },\n  name: 'SetupPage',\n  props: ['devices'],\n  data() {\n    return {\n      loading: false,\n      errmsg: '',\n      retrieveResult: '',\n      tcu:{name:'',ipaddress:''},\n      timers: [],\n    }\n  },\n  computed: {\n  },\n  methods: {\n    getTimers() {\n      this.loading = true;\n      this.axios.post(\"/api/command\", {\n        command: \"getTimers\",\n        data: {ipaddress:this.tcu.ipaddress}\n      })\n      .then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"\";\n          console.log(f);\n          this.timers = f.timers;\n        }\n        this.loading = false;\n      })\n      .catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    }\n  },\n  watch: {\n  },\n  mounted() {\n    this.emitter.on('newtcu', tcu => {\n        console.log(\"TcuSetup page received 'newtcu' message: \", tcu);\n        this.tcu = tcu;\n        this.getTimers();\n      }\n    );\n  }\n}\n\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}