{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BAlert = _resolveComponent(\"BAlert\");\n  const _component_BOverlay = _resolveComponent(\"BOverlay\");\n  const _component_BFormInput = _resolveComponent(\"BFormInput\");\n  const _component_BFormInvalidFeedback = _resolveComponent(\"BFormInvalidFeedback\");\n  const _component_BFormGroup = _resolveComponent(\"BFormGroup\");\n  const _component_BButton = _resolveComponent(\"BButton\");\n  const _component_BForm = _resolveComponent(\"BForm\");\n  const _component_BCard = _resolveComponent(\"BCard\");\n  return _withDirectives((_openBlock(), _createBlock(_component_BCard, {\n    title: \"Configuration\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_BAlert, {\n      \"model-value\": $data.retrieveResult !== '',\n      variant: $data.errmsg,\n      show: \"\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($data.retrieveResult), 1)]),\n      _: 1\n    }, 8, [\"model-value\", \"variant\"]), _createVNode(_component_BOverlay, {\n      show: $data.loading,\n      variant: \"light\",\n      opacity: \"0.6\",\n      rounded: \"sm\"\n    }, null, 8, [\"show\"]), _createVNode(_component_BForm, {\n      onSubmit: _ctx.onSubmit\n    }, {\n      default: _withCtx(() => [_createVNode(_component_BFormGroup, {\n        id: \"input-group-1\",\n        label: \"IP address of TCU:\",\n        \"label-for\": \"input-1\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_BFormInput, {\n          id: \"input-1\",\n          modelValue: _ctx.config.ipaddress,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.config.ipaddress = $event),\n          state: $options.validateIP,\n          placeholder: \"192.168.xxx.xxx\",\n          required: \"\"\n        }, null, 8, [\"modelValue\", \"state\"]), _createVNode(_component_BFormInvalidFeedback, {\n          id: \"input-live-feedback\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" IP address consist of 4 segments of max 3 digits separated by a . \")]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_BButton, {\n        type: \"submit\",\n        variant: \"primary\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Save\")]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"onSubmit\"])]),\n    _: 1\n  }, 512)), [[_vShow, $props.showPage]]);\n}","map":{"version":3,"mappings":";;;;;;;;;;wCACEA,aAYQC;IAZDC,KAAK,EAAC;EAAe;sBAC1B,MAAiG,CAAjGC,aAAiGC;MAAxF,aAAW,EAAEC,oBAAc;MAAUC,OAAO,EAAED,YAAM;MAAEE,IAAI,EAAJ;;wBAAK,MAAoB,mCAAjBF,oBAAc;;uCACrFF,aAAgFK;MAArED,IAAI,EAAEF,aAAO;MAAEC,OAAO,EAAC,OAAO;MAACG,OAAO,EAAC,KAAK;MAACC,OAAO,EAAC;2BAChEP,aAQQQ;MARAC,QAAM,EAAEC;IAAQ;wBACtB,MAKa,CALbV,aAKaW;QALDC,EAAE,EAAC,eAAe;QAACC,KAAK,EAAC,oBAAoB;QAAC,WAAS,EAAC;;0BAClE,MAAgH,CAAhHb,aAAgHc;UAApGF,EAAE,EAAC,SAAS;sBAAUF,WAAM,CAACK,SAAS;qEAAhBL,WAAM,CAACK,SAAS;UAAGC,KAAK,EAAEC,mBAAU;UAAEC,WAAW,EAAC,iBAAiB;UAACC,QAAQ,EAAR;8CACtGnB,aAEuBoB;UAFDR,EAAE,EAAC;QAAqB;4BAAC,MAE/C,kBAF+C,qEAE/C;;;;UAEFZ,aAAuDqB;QAA9CC,IAAI,EAAC,QAAQ;QAACnB,OAAO,EAAC;;0BAAU,MAAI,kBAAJ,MAAI;;;;;;sBAVZoB,eAAQ","names":["_createBlock","_component_BCard","title","_createVNode","_component_BAlert","$data","variant","show","_component_BOverlay","opacity","rounded","_component_BForm","onSubmit","_ctx","_component_BFormGroup","id","label","_component_BFormInput","ipaddress","state","$options","placeholder","required","_component_BFormInvalidFeedback","_component_BButton","type","$props"],"sourceRoot":"","sources":["/homes/tom/Workspaces/java/tcu-monitor/src/main/vue/src/components/Configuration.vue"],"sourcesContent":["<template>\n  <BCard title=\"Configuration\" v-show=\"showPage\">\n    <BAlert :model-value=\"retrieveResult !== ''\" :variant=\"errmsg\" show>{{ retrieveResult }}</BAlert>\n    <BOverlay :show=\"loading\" variant=\"light\" opacity=\"0.6\" rounded=\"sm\"></BOverlay>\n    <BForm @submit=\"onSubmit\">\n      <BFormGroup id=\"input-group-1\" label=\"IP address of TCU:\" label-for=\"input-1\">\n        <BFormInput id=\"input-1\" v-model=\"config.ipaddress\" :state=\"validateIP\" placeholder=\"192.168.xxx.xxx\" required/>\n        <BFormInvalidFeedback id=\"input-live-feedback\">\n          IP address consist of 4 segments of max 3 digits separated by a .\n        </BFormInvalidFeedback>\n      </BFormGroup>\n      <BButton type=\"submit\" variant=\"primary\">Save</BButton>\n    </BForm>\n  </BCard>\n</template>\n\n<style>\n.text-size {\n  font-size: 14px;\n }\n</style>\n<script>\n\nexport default {\n  components: {\n    \n  },\n  name: 'ConfigPage',\n  props: ['showPage'],\n  data() {\n    return {\n      loading: false,\n      errmsg: '',\n      retrieveResult: ''\n    }\n  },\n  computed: {\n    validateIP() {\n      var ip = String(config.ipaddress);\n      var ipsegs = ip.split(\".\");\n      if (ipsegs != 4) {\n        return false;\n      }\n      for (var seg of ipsegs) {\n        if (String(seg).match(\"^[0-9]{1,3}$\") == null ) return false;\n      }\n      return true;\n    }\n  },\n  methods: {\n  },\n  watch: {\n  },\n  mounted() {\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}