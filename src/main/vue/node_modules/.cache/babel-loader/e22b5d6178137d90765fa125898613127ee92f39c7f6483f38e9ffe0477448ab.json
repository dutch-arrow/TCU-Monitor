{"ast":null,"code":"export default {\n  components: {},\n  name: 'SetupPage',\n  props: ['devices'],\n  data() {\n    return {\n      loading: false,\n      errmsg: '',\n      retrieveResult: '',\n      tcu: {\n        name: '',\n        ipaddress: ''\n      },\n      timers: []\n    };\n  },\n  computed: {},\n  methods: {\n    getTimers() {\n      this.loading = true;\n      this.axios.post(\"/api/command\", {\n        command: \"getTimers\",\n        data: {\n          ipaddress: this.tcu.ipaddress\n        }\n      }).then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"\";\n          console.log(f);\n          this.timers = f.timers;\n        }\n        this.loading = false;\n      }).catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    }\n  },\n  watch: {},\n  mounted() {\n    this.emitter.on('newtcu', tcu => {\n      this.tcu = tcu;\n      this.getTimers();\n    });\n  }\n};","map":{"version":3,"mappings":"AAqBA,eAAe;EACbA,UAAU,EAAE,CAEZ,CAAC;EACDC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE,EAAE;MACVC,cAAc,EAAE,EAAE;MAClBC,GAAG,EAAC;QAACN,IAAI,EAAC,EAAE;QAACO,SAAS,EAAC;MAAE,CAAC;MAC1BC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE,CACV,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,GAAG;MACV,IAAI,CAACR,OAAM,GAAI,IAAI;MACnB,IAAI,CAACS,KAAK,CAACC,IAAI,CAAC,cAAc,EAAE;QAC9BC,OAAO,EAAE,WAAW;QACpBZ,IAAI,EAAE;UAACK,SAAS,EAAC,IAAI,CAACD,GAAG,CAACC;QAAS;MACrC,CAAC,EACAQ,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIC,IAAID,QAAQ,CAACd,IAAI;QACrB,IAAIe,CAAC,CAACC,KAAI,KAAMC,SAAS,EAAE;UACzB,IAAI,CAACf,MAAK,GAAI,QAAQ;UACtB,IAAI,CAACC,cAAa,GAAIY,CAAC,CAACC,KAAK;QAC/B,OAAO;UACL,IAAI,CAACd,MAAK,GAAI,SAAS;UACvB,IAAI,CAACC,cAAa,GAAI,EAAE;UACxBe,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;UACd,IAAI,CAACT,MAAK,GAAIS,CAAC,CAACT,MAAM;QACxB;QACA,IAAI,CAACL,OAAM,GAAI,KAAK;MACtB,CAAC,EACAmB,KAAK,CAACJ,KAAI,IAAK;QACd,IAAI,CAACb,cAAa,GAAIa,KAAK,CAACK,OAAO;QACnC,IAAI,CAACnB,MAAK,GAAI,QAAQ;QACtB,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB,CAAC,CAAC;IACJ;EACF,CAAC;EACDqB,KAAK,EAAE,CACP,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,QAAQ,EAAErB,GAAE,IAAK;MAC7B,IAAI,CAACA,GAAE,GAAIA,GAAG;MACd,IAAI,CAACK,SAAS,EAAE;IAClB,EACD;EACH;AACF","names":["components","name","props","data","loading","errmsg","retrieveResult","tcu","ipaddress","timers","computed","methods","getTimers","axios","post","command","then","response","f","error","undefined","console","log","catch","message","watch","mounted","emitter","on"],"sourceRoot":"","sources":["/homes/tom/Workspaces/java/tcu-monitor/src/main/vue/src/components/TcuSetup.vue"],"sourcesContent":["<template>\n  <BAlert :model-value=\"retrieveResult !== ''\" :variant=\"errmsg\" show>{{ retrieveResult }}</BAlert>\n  <BOverlay :show=\"loading\" variant=\"light\" opacity=\"0.6\" rounded=\"sm\"></BOverlay>\n  <BContainer>\n    <div>\n      <BRow v-for=\"timer in timers\" v-bind:key=\"timer.device\">\n        <BCol>\n          Device {{ timer.device }}\n        </BCol>\n      </BRow>\n    </div>\n  </BContainer>\n</template>\n\n<style>\n.text-size {\n  font-size: 18px;\n}\n</style>\n<script>\n\nexport default {\n  components: {\n    \n  },\n  name: 'SetupPage',\n  props: ['devices'],\n  data() {\n    return {\n      loading: false,\n      errmsg: '',\n      retrieveResult: '',\n      tcu:{name:'',ipaddress:''},\n      timers: [],\n    }\n  },\n  computed: {\n  },\n  methods: {\n    getTimers() {\n      this.loading = true;\n      this.axios.post(\"/api/command\", {\n        command: \"getTimers\",\n        data: {ipaddress:this.tcu.ipaddress}\n      })\n      .then(response => {\n        var f = response.data;\n        if (f.error !== undefined) {\n          this.errmsg = \"danger\";\n          this.retrieveResult = f.error;\n        } else {\n          this.errmsg = \"success\";\n          this.retrieveResult = \"\";\n          console.log(f);\n          this.timers = f.timers;\n        }\n        this.loading = false;\n      })\n      .catch(error => {\n        this.retrieveResult = error.message;\n        this.errmsg = \"danger\";\n        this.loading = false;\n      });\n    }\n  },\n  watch: {\n  },\n  mounted() {\n    this.emitter.on('newtcu', tcu => {\n        this.tcu = tcu;\n        this.getTimers();\n      }\n    );\n  }\n}\n\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}